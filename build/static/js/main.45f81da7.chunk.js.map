{"version":3,"sources":["App.js","logo.svg","pipeline-express.jpg","reportWebVitals.js","index.js","cat.jpg"],"names":["myAlgoWallet","Pipeline","init","main","cat","txid","a","indexerURL","alert","url2","fetch","data","json","data2","data3","transaction","note","console","log","base64ToArrayBuffer","newData","Buffer","from","imgdata","eightbit","i","length","r","g","b","newColor","Math","floor","push","removeAlpha","counter","App","props","click","updateCanvas","state","URL","inputRecipient","event","setState","recipient","target","value","handleURL","handleB64","handleFetch","fetchNote","noteTxID","then","drawData","handleTXID","myAddress","newsrc","img","Image","crossOrigin","src","canvas","document","getElementById","ctx","getContext","onload","width","height","drawImage","style","display","getImageData","array","String","fromCharCode","apply","clearRect","addAlpha","pixel","rgbFrom8","this","pic","Uint8ClampedArray","imgData","ImageData","renderer","createElement","putImageData","align","textAlign","id","type","onChange","onClick","placeholder","wallet","context","returnTo","index","amount","txID","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+NAOMA,EAAeC,IAASC,OAE9BD,IAASE,MAAO,EAIDC,I,4CAEf,WAAyBC,GAAzB,uBAAAC,EAAA,6DAEMC,EAAa,WAEI,GAAjBN,IAASE,KACXI,GAA0B,kDAG1BC,MAAM,2BAGJC,EAAOF,EAAaF,EAX1B,kBAaqBK,MAAMD,GAb3B,cAaQE,EAbR,gBAcsBA,EAAKC,OAd3B,cAcQC,EAdR,OAeQC,EAAQD,EAAME,YAAYC,KAflC,kBAgBWF,GAhBX,kCAkBIG,QAAQC,IAAR,MAlBJ,2D,sBAsBA,SAASC,EAAoBR,GAC3B,IAAIS,EAAUC,EAAOC,KAAKX,EAAM,UAEhC,OADAM,QAAQC,IAAIE,GACLA,EAOT,IAAIG,EAAU,GAEd,SAASC,EAASb,GAGhB,IAFA,IAAIS,EAAU,GAELK,EAAI,EAAGA,EAAId,EAAKe,OAAQD,GAAK,EAAG,CACvC,IAAIE,EAAIhB,EAAKc,GACTG,EAAIjB,EAAKc,EAAI,GACbI,EAAIlB,EAAKc,EAAI,GACbK,GAAYC,KAAKC,MAAOL,EAAI,KAAQ,IAAMI,KAAKC,MAAOJ,EAAI,KAAQ,GAAKG,KAAKC,MAAOH,EAAI,IAC3FT,EAAQa,KAAKH,GAEf,OAAOV,EAmBT,SAASc,EAAYvB,GAGnB,IAFA,IAAIS,EAAU,GACVe,EAAU,EACLV,EAAI,EAAGA,EAAId,EAAKe,OAAQD,IAC3BU,EAAU,GAAKf,EAAQa,KAAKtB,EAAKc,IAAKU,KACnCA,EAAU,EAEnB,OAAOf,E,IAgBHgB,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6CRC,MAAQ,WACN,EAAKC,aAAa,EAAKC,MAAMC,MA/CZ,EAkDnBC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,UAAWF,EAAMG,OAAOC,SAnDvB,EAsDnBC,UAAY,SAACL,GACX,EAAKC,SAAS,CAAEH,IAAKE,EAAMG,OAAOC,SAvDjB,EA0DnBE,UAAY,SAACN,GACX,EAAKC,SAAS,CAAEjC,KAAMQ,EAAoBwB,EAAMG,OAAOC,UA3DtC,EA8DnBG,YAAc,Y,4CACZC,CAAU,EAAKX,MAAMY,UAAUC,MAAK,SAAA1C,GAAI,OACtC,EAAKiC,SAAS,CAAEjC,KAAMQ,EAAoBR,KAAS,kBACjD,EAAK2C,kBAjEQ,EAoEnBC,WAAa,SAACZ,GACZ,EAAKC,SAAS,CAAEQ,SAAUT,EAAMG,OAAOC,SAnEvC,EAAKP,MAAQ,CACX7B,KAAM,GACN6C,UAAW,GACXf,IAAK,GACLW,SAAU,IANK,E,gDAUnB,SAAaK,GAAS,IAAD,OACfC,EAAM,IAAIC,MACdD,EAAIE,YAAc,aAClBF,EAAIG,IAAMJ,EACV,IAAIK,EAASC,SAASC,eAAe,UACjCC,EAAMH,EAAOI,WAAW,MAC5BR,EAAIS,OAAS,WACXL,EAAOM,MAAQ,GACfN,EAAOO,OAAS,GAChBJ,EAAIK,UAAUZ,EAAK,EAAG,EAAG,GAAI,IAC7BA,EAAIa,MAAMC,QAAU,OACpBjD,EAAU0C,EAAIQ,aAAa,EAAG,EAAG,GAAI,IAAI9D,KAEzC,EAAKiC,SAAS,CAAEjC,KAAMa,EAASU,EAAYX,MACzC,kBAAM,EAAKqB,SAAS,CAAE5B,MAnFV0D,EAmF2B,EAAKlC,MAAM7B,KAlFjDgE,OAAOC,aAAaC,MAAMF,OAAQD,MAmFjC,kBAAM,EAAKpB,cApFrB,IAAoBoB,Q,sBAyFlB,WACE,IAAIZ,EAASC,SAASC,eAAe,WACjCC,EAAMH,EAAOI,WAAW,MAC5BD,EAAIa,UAAU,EAAG,EAAGhB,EAAOM,MAAON,EAAOO,QACzC,IAAMjD,EAhDV,SAAkBT,GAGhB,IAFA,IAAIS,EAAU,GACVe,GAAW,EACNV,EAAI,EAAGA,EAAId,EAAKe,OAAQD,IAC3BU,EAAU,GAAKf,EAAQa,KAAKtB,EAAKc,IAAKU,MACnCf,EAAQa,KAAK,KAAMb,EAAQa,KAAKtB,EAAKc,IAAKU,EAAU,GAG7D,OADAf,EAAQa,KAAK,KACNb,EAwCW2D,CA1EpB,SAAkBpE,GAEhB,IADA,IAAIS,EAAU,GACLK,EAAI,EAAGA,EAAId,EAAKe,OAAQD,IAAK,CACpC,IAAIuD,EAAQrE,EAAKc,GACbE,EAAmB,IAAdqD,GAAS,GACdpD,EAA0B,KAAZ,GAARoD,IAAe,GACrBnD,EAAkB,IAAL,EAARmD,GACT5D,EAAQa,KAAKN,GACbP,EAAQa,KAAKL,GACbR,EAAQa,KAAKJ,GAEf,OAAOT,EA+DoB6D,CAASC,KAAK1C,MAAM7B,OACzCwE,EAAM,IAAIC,kBAAkBhE,GAC5BiE,EAAU,IAAIC,UAAUH,EAAK,GAAI,IACjCI,EAAWxB,SAASyB,cAAc,UACtCD,EAASrB,WAAW,MAAMuB,aAAaJ,EAAS,EAAG,GACnDpB,EAAIK,UAAUiB,EAAU,EAAG,EAAG,KAAM,O,+BAGtC,WACEL,KAAK3C,aAAanC,O,oBA6BpB,WAEE,OACE,sBAAKsF,MAAM,SAASC,UAAU,SAASvB,MAAM,OAA7C,UACE,wBAAQwB,GAAG,WAAW,uBACtB,wBAAQA,GAAG,UAAUxB,MAAM,MAAMC,OAAO,QAAQ,uBAChD,8CACE,uBAAOwB,KAAK,OAAOC,SAAUZ,KAAKlC,eAEpC,wBAAQ+C,QAASb,KAAK5C,MAAtB,kBAA0C,uBAE1C,2CACE,uBAAOuD,KAAK,OAAOG,YAAY,4BAA4B5B,MAAM,MAAMC,OAAO,MAAMyB,SAAUZ,KAAK3B,gBAErG,wBAAQwC,QAASb,KAAKhC,YAAtB,4BAA0D,uBAE1D,cAAC,IAAD,CAAY+C,OAAQjG,EAAckG,QAAShB,KAAMiB,SAAU,cAAe,uBAC1E,6BAAKjB,KAAK1C,MAAMgB,YAAe,uBAC/B,iCACE,+CAEE,uBAAOqC,KAAK,OAAOC,SAAUZ,KAAKxC,oBAC5B,0BAEV,uBAAS,uBACT,cAAC,IAAD,CACE0D,MAAO,EACPvD,UAAWqC,KAAK1C,MAAMK,UACtBwD,OAAQ,EACRrF,KAAMkE,KAAK1C,MAAMxB,KACjBwC,UAAW0B,KAAK1C,MAAMgB,UACtByC,OAAQjG,EACRkG,QAAShB,KACTiB,SAAU,SAEZ,8BAAG,uDAAH,IAAkCjB,KAAK1C,MAAM8D,e,GA5GnCC,aAoHHnE,Q,+ECzNA,K,iCCAA,K,6YCYAoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC9E,EAAA,EAAD,MAEF2B,SAASC,eAAe,SAM1BwC,K,gCChBe,QAA0B,kC","file":"static/js/main.45f81da7.chunk.js","sourcesContent":["import logo from './logo.svg';\n//import './App.css';\nimport cat from './cat.jpg'\nimport pipe from './pipeline-express.jpg';\nimport React, { Component } from 'react';\nimport { Pipeline, AlgoButton, AlgoSendButton } from 'pipeline-express-react';\n\nconst myAlgoWallet = Pipeline.init();\n\nPipeline.main = true\n\n//const catdata = \"AAAAACAgICAAAAAAAAAAAAAAACCIzMyt0YyIsdHRAAAAICAgICAgAAAAICQAAAAAACCIzMzR0dHR+fr6AAAgICQkREREIAAgRIhoAAAAACCIzMzR1Yj1+v76AAAgJEREaIiIRABErK2sIAAAAABozND1iK35+v7+AAAgJERojK2saCBoiM2s9QAAAABkzPCsrM35+v7+AAAgJGisrdHRiCRoiKysiCAAAABkzKyI0c35+fr+AABEaIzQ0dXRjCAAqPHRiIgAAABkRESs9cj++vr+AABEaKzR9fWtRAAA0fH1rGggAAAgaGTx9ez++vn6AABEjKysaEQgAAAAiMzMzIggAABkRGTNzfH++vX1ACSIrIwgIAAAACAA0YTRzayIACAAiKzNzfb5+fXwAESMrCQAACAgICQgiKj1QIhEAGQAiETRqNH19fXxJGisrAAgICBERGgkZKyMzWQgiCAAIGiI0YjR+fn1JIitaAAAACBEaGhEaIiIREQAZGgAACBorKzR+vr6RIytJAAAAEREZGgkrESIRCBoREQgAACIIM3R+fr6JIisIAAAIERoRGhEjGisrACsiGhERCCsZKzR+fn6JGiMAAAgRERoRGhEZABEIADwrERoAGiIAKzR9fn5JGiMICAgREREaEREiGhERADM9YgArCCsRIjR9fn1AERoJCAgaEREiCSIiM1ErEQgzKwAACAgrGjM9fXRACRoJCBEREREjACssdHNICDRaET2rCAgjGSs0dHQACRERCBEREREjACIjIgARGhoZCDRIABEiESIrKysAAAkJCAgRABkiACIiGis0YxEAESsZIhoZERoiIhoAAAAAAAgREQgaCSIiK2I0UQgICAgqK1oRERkZEQgBAAAACAAAEQgZGgkiK2srKxoqCCIRIhERERERAAABAAAAABERABEZIhEaKys8axErGSIiGRERGggIAAAAAAAAAAgJCAgRGiIIERoRIzRiGT6iGRERCAAAAAAAAAAAAAAACAARGSIiEREZK3R0frRrWREICBkAAAAACBEaIisRCAgRERERERkiGRAQEQgICAgICAgIEAgQCAgRERERCBEQEBAQCAgICAgICAgICAgICAAAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAICAgICAgICAgICAgICAgICAgICAgICAAAAAAAAAA\"\n\nconst imgSrc = cat;\n\nasync function fetchNote(txid) {\n\n  let indexerURL = 'https://'\n\n  if (Pipeline.main == true) {\n    indexerURL = indexerURL + 'algoindexer.algoexplorerapi.io/v2/transactions/'\n  }\n  else {\n    alert(\"testNet not yet enabled\")\n  }\n\n  let url2 = indexerURL + txid\n  try {\n    let data = await fetch(url2)\n    let data2 = await data.json()\n    let data3 = data2.transaction.note\n    return data3\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nfunction base64ToArrayBuffer(data) {\n  let newData = Buffer.from(data, 'base64');\n  console.log(newData);\n  return newData;\n}\n\nfunction bin2String(array) {\n  return String.fromCharCode.apply(String, array);\n}\n\nvar imgdata = [];\n\nfunction eightbit(data) {\n  let newData = [];\n  let counter = 0;\n  for (var i = 0; i < data.length; i += 3) {\n    let r = data[i];\n    let g = data[i + 1];\n    let b = data[i + 2];\n    let newColor = (Math.floor((r / 32)) << 5) + (Math.floor((g / 32)) << 2) + Math.floor((b / 64));\n    newData.push(newColor);\n  }\n  return newData;\n}\n\nfunction rgbFrom8(data) {\n  let newData = [];\n  for (var i = 0; i < data.length; i++) {\n    let pixel = data[i];\n    let r = (pixel >> 5) * 32;\n    let g = ((pixel & 28) >> 2) * 32;\n    let b = (pixel & 3) * 64;\n    newData.push(r);\n    newData.push(g);\n    newData.push(b);\n  }\n  return newData;\n}\n\n\n\nfunction removeAlpha(data) {\n  let newData = [];\n  let counter = 0\n  for (var i = 0; i < data.length; i++) {\n    if (counter < 3) { newData.push(data[i]); counter++; }\n    else { counter = 0 }\n  }\n  return newData;\n}\n\nfunction addAlpha(data) {\n  let newData = [];\n  let counter = -1\n  for (var i = 0; i < data.length; i++) {\n    if (counter < 2) { newData.push(data[i]); counter++; }\n    else { newData.push(255); newData.push(data[i]); counter = 0; }\n  }\n  newData.push(255);\n  return newData;\n\n}\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      myAddress: \"\",\n      URL: \"\",\n      noteTxID: \"\"\n    }\n  }\n\n  updateCanvas(newsrc) {\n    var img = new Image();\n    img.crossOrigin = 'Aanonymous';\n    img.src = newsrc;\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n    img.onload = () => {\n      canvas.width = 30\n      canvas.height = 30\n      ctx.drawImage(img, 0, 0, 30, 30)\n      img.style.display = 'none';\n      imgdata = ctx.getImageData(0, 0, 30, 30).data;\n\n      this.setState({ data: eightbit(removeAlpha(imgdata)) },\n        () => this.setState({ note: bin2String(this.state.data) },\n          () => this.drawData()))\n\n    }\n  }\n\n  drawData() {\n    var canvas = document.getElementById('canvas2');\n    var ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const newData = addAlpha(rgbFrom8(this.state.data));\n    var pic = new Uint8ClampedArray(newData);\n    var imgData = new ImageData(pic, 30, 30);\n    var renderer = document.createElement('canvas');\n    renderer.getContext('2d').putImageData(imgData, 0, 0);\n    ctx.drawImage(renderer, 0, 0, 1200, 600);\n  }\n\n  componentDidMount() {\n    this.updateCanvas(cat);\n  }\n\n  click = () => {\n    this.updateCanvas(this.state.URL)\n  }\n\n  inputRecipient = (event) => {\n    this.setState({ recipient: event.target.value });\n  }\n\n  handleURL = (event) => {\n    this.setState({ URL: event.target.value })\n  }\n\n  handleB64 = (event) => {\n    this.setState({ data: base64ToArrayBuffer(event.target.value) })\n  }\n\n  handleFetch = () => {\n    fetchNote(this.state.noteTxID).then(data =>\n      this.setState({ data: base64ToArrayBuffer(data) }, () =>\n        this.drawData()));\n  }\n\n  handleTXID = (event) => {\n    this.setState({ noteTxID: event.target.value })\n  }\n\n  render() {\n\n    return (\n      <div align=\"center\" textAlign=\"center\" width=\"100%\">\n        <canvas id=\"canvas\" /><br />\n        <canvas id=\"canvas2\" width=\"125\" height=\"125\" /><br />\n        <label>Image URL\n          <input type=\"text\" onChange={this.handleURL} />\n        </label>\n        <button onClick={this.click}>Load</button><br />\n\n        <label> txID:\n          <input type=\"text\" placeholder=\"txid of pic on blockchain\" width=\"500\" height=\"100\" onChange={this.handleTXID} />\n        </label>\n        <button onClick={this.handleFetch}>Fetch & Render</button><br />\n\n        <AlgoButton wallet={myAlgoWallet} context={this} returnTo={\"myAddress\"} /><br />\n        <h3>{this.state.myAddress}</h3><br />\n        <form >\n          <label>\n            Recipient:\n            <input type=\"text\" onChange={this.inputRecipient} />\n          </label><br></br>\n        </form>\n        <br></br><br></br>\n        <AlgoSendButton\n          index={0}\n          recipient={this.state.recipient}\n          amount={1}\n          note={this.state.note}\n          myAddress={this.state.myAddress}\n          wallet={myAlgoWallet}\n          context={this}\n          returnTo={\"txID\"}\n        />\n        <p><b>txid of uploaded pic: </b> {this.state.txID}</p>\n\n\n      </div>\n    )\n  }\n}\n\nexport default App;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/pipeline-express.1dec43b1.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/cat.7693db76.jpg\";"],"sourceRoot":""}