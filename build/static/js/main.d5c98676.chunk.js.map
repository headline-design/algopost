{"version":3,"sources":["App.js","logo.svg","pipeline-express.jpg","reportWebVitals.js","index.js","cat.jpg"],"names":["myAlgoWallet","Pipeline","init","cat","base64ToArrayBuffer","data","newData","Buffer","from","console","log","imgdata","eightbit","i","length","r","g","b","newColor","Math","floor","push","removeAlpha","counter","App","props","click","updateCanvas","state","URL","inputRecipient","event","setState","recipient","target","value","handleURL","handleB64","renderB64","drawData","myAddress","newsrc","img","Image","crossOrigin","src","canvas","document","getElementById","ctx","getContext","onload","width","height","drawImage","style","display","getImageData","note","array","String","fromCharCode","apply","clearRect","addAlpha","pixel","rgbFrom8","this","pic","Uint8ClampedArray","imgData","ImageData","renderer","createElement","putImageData","align","id","type","onChange","onClick","wallet","context","returnTo","index","amount","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d5c98676.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport cat from './cat.jpg'\nimport pipe from './pipeline-express.jpg';\nimport React, { Component } from 'react';\nimport { Pipeline, AlgoButton, AlgoSendButton } from 'pipeline-express-react';\n\nconst myAlgoWallet = Pipeline.init();\n\n//const catdata = \"AAAAACAgICAAAAAAAAAAAAAAACCIzMyt0YyIsdHRAAAAICAgICAgAAAAICQAAAAAACCIzMzR0dHR+fr6AAAgICQkREREIAAgRIhoAAAAACCIzMzR1Yj1+v76AAAgJEREaIiIRABErK2sIAAAAABozND1iK35+v7+AAAgJERojK2saCBoiM2s9QAAAABkzPCsrM35+v7+AAAgJGisrdHRiCRoiKysiCAAAABkzKyI0c35+fr+AABEaIzQ0dXRjCAAqPHRiIgAAABkRESs9cj++vr+AABEaKzR9fWtRAAA0fH1rGggAAAgaGTx9ez++vn6AABEjKysaEQgAAAAiMzMzIggAABkRGTNzfH++vX1ACSIrIwgIAAAACAA0YTRzayIACAAiKzNzfb5+fXwAESMrCQAACAgICQgiKj1QIhEAGQAiETRqNH19fXxJGisrAAgICBERGgkZKyMzWQgiCAAIGiI0YjR+fn1JIitaAAAACBEaGhEaIiIREQAZGgAACBorKzR+vr6RIytJAAAAEREZGgkrESIRCBoREQgAACIIM3R+fr6JIisIAAAIERoRGhEjGisrACsiGhERCCsZKzR+fn6JGiMAAAgRERoRGhEZABEIADwrERoAGiIAKzR9fn5JGiMICAgREREaEREiGhERADM9YgArCCsRIjR9fn1AERoJCAgaEREiCSIiM1ErEQgzKwAACAgrGjM9fXRACRoJCBEREREjACssdHNICDRaET2rCAgjGSs0dHQACRERCBEREREjACIjIgARGhoZCDRIABEiESIrKysAAAkJCAgRABkiACIiGis0YxEAESsZIhoZERoiIhoAAAAAAAgREQgaCSIiK2I0UQgICAgqK1oRERkZEQgBAAAACAAAEQgZGgkiK2srKxoqCCIRIhERERERAAABAAAAABERABEZIhEaKys8axErGSIiGRERGggIAAAAAAAAAAgJCAgRGiIIERoRIzRiGT6iGRERCAAAAAAAAAAAAAAACAARGSIiEREZK3R0frRrWREICBkAAAAACBEaIisRCAgRERERERkiGRAQEQgICAgICAgIEAgQCAgRERERCBEQEBAQCAgICAgICAgICAgICAAAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAAAAAAICAgICAgICAgICAgICAgICAgICAgICAAAAAAAAAA\"\n\nconst imgSrc = cat;\n\nfunction base64ToArrayBuffer(data){\n   let newData = Buffer.from(data, 'base64');\n   console.log(newData);\n   return newData;\n}\n\nfunction bin2String(array) {\n  return String.fromCharCode.apply(String, array);\n}\n\nvar imgdata = [];\n\nfunction eightbit(data){\nlet newData = [];\nlet counter = 0;\nfor (var i = 0; i < data.length; i += 3){\n  let r = data[i];\n  let g = data[i + 1];\n  let b = data[i + 2];\n  let newColor = (Math.floor((r / 32)) << 5) + (Math.floor((g / 32)) << 2) + Math.floor((b / 64));\n  newData.push(newColor);\n}\nreturn newData;\n}\n\nfunction rgbFrom8(data) {\n  let newData = [];\n  for (var i = 0; i < data.length; i++) {\n    let pixel = data[i];\n    let r = (pixel >> 5) * 32;\n    let g = ((pixel & 28) >> 2) * 32;\n    let b = (pixel & 3) * 64;\n    newData.push(r);\n    newData.push(g);\n    newData.push(b);\n  }\n  return newData;\n  }\n\n\n\nfunction removeAlpha(data){\n  let newData = [];\n  let counter = 0\n  for (var i = 0; i < data.length; i ++){\n    if (counter < 3) {newData.push(data[i]); counter ++;}\n    else {counter = 0 }\n  }\n  return newData;\n}\n\nfunction addAlpha(data){\n  let newData = [];\n  let counter = -1\n  for (var i = 0; i < data.length ; i ++){\n    if (counter < 2) {newData.push(data[i]); counter ++;}\n    else {newData.push(255); newData.push(data[i]); counter = 0;}\n  }\n  newData.push(255);\n  return newData;\n  \n}\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: [],\n      myAddress: \"\",\n      URL: \"\"\n    }\n  }\n\n  updateCanvas(newsrc){\n    var img = new Image();\n    img.crossOrigin = 'Aanonymous';\n    img.src = newsrc;\n    var canvas = document.getElementById('canvas');\n    var ctx = canvas.getContext('2d');\n    img.onload = () => {\n      canvas.width=30\n      canvas.height=30\n      ctx.drawImage(img, 0, 0, 30, 30)\n      img.style.display = 'none';\n      imgdata = ctx.getImageData(0, 0, 30, 30).data;\n      \n      this.setState({ data: eightbit(removeAlpha(imgdata)) }, \n      () => this.setState({ note: bin2String(this.state.data) }, \n      () => this.drawData()))\n\n    }\n  }\n\n  drawData(){\n    var canvas = document.getElementById('canvas2');\n    var ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const newData = addAlpha(rgbFrom8(this.state.data));\n    var pic = new Uint8ClampedArray(newData);\n    var imgData = new ImageData(pic,30,30);\n    var renderer = document.createElement('canvas');\n    renderer.getContext('2d').putImageData(imgData, 0, 0);\n    ctx.drawImage(renderer, 0,0, 1200, 600);\n  }\n\n  componentDidMount(){\n    this.updateCanvas(cat);\n}\n\nclick = () => {\n  this.updateCanvas(this.state.URL)\n}\n\ninputRecipient = (event) => {\n  this.setState({ recipient: event.target.value });\n}\n\nhandleURL = (event) => {\n  this.setState({URL: event.target.value})\n}\n\nhandleB64 = (event) => {\n  this.setState({data: base64ToArrayBuffer(event.target.value) })\n}\n\nrenderB64 = () => {\n  this.drawData();\n}\n\n\n  render() {\n\n    return (\n      <div align=\"center\" width=\"100%\">\n        <canvas id=\"canvas\"/><br/>\n        <canvas id=\"canvas2\" width=\"100\" height=\"100\"/><br/>\n        <label>Image URL\n        <input type=\"text\" onChange={this.handleURL}/>\n        </label>\n       <button onClick={this.click}>Load</button><br/>\n\n       <label> Base64 Algorand Note to Render: \n        <input type=\"text\"  width=\"500\" height=\"100\" onChange={this.handleB64}/>\n        </label>\n       <button onClick={this.renderB64}>Render</button><br/>\n\n        <AlgoButton wallet={myAlgoWallet} context={this} returnTo={\"myAddress\"} /><br />\n        <h3>{this.state.myAddress}</h3><br />\n        <form >\n        <label>\n          Recipient:\n          <input type=\"text\" onChange={this.inputRecipient} />\n        </label><br></br>\n        </form>\n   <br></br><br></br>\n        <AlgoSendButton\n          index={0}\n          recipient={this.state.recipient}\n          amount={1}\n          note={this.state.note}\n          myAddress={this.state.myAddress}\n          wallet={myAlgoWallet}\n          context={this}\n          returnTo={\"txID\"}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/pipeline-express.1dec43b1.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/cat.94371a22.jpg\";"],"sourceRoot":""}